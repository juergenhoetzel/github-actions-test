name: "CI"
on:
  push:
    # Comment out this section to enable testing of all branches.
    branches:
      - master
  pull_request:
    paths-ignore: ['**.adoc']
    branches-ignore: ['future-doc']
jobs:
  test:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Check out the source code
        uses: actions/checkout@v2
      - uses: actions/github-script@v3
        with:
          script: |
            const os = require('os');
            const fs = require('fs');
            const {sep} = require('path');
            const util = require('util');
            const exec = util.promisify(require('child_process').exec);
            const suffix = (os.type() === 'Windows_NT') ? '.bat' : '';
            let {repository, pull_request} = context.payload;
            let branch = pull_request ? pull_request.head.ref : repository.default_branch;
            console.log(`Branch: ${branch}`);
            let repo_full_name = pull_request ? pull_request.head.repo.full_name : repository.full_name;
            let download_url = `https://raw.github.com/${repo_full_name}/${branch}/hello${suffix}`;
            console.log(`Download URL: ${download_url}`);
            console.log(`Checking branch ${branch} from ${repo_full_name}`);
            console.log(`OS: ${os.type()}`);
            await exec(`.${sep}hello${suffix}`, {stdio: 'inherit'});
            await io.mkdirP('tmp');
            const response = await github.request(download_url);
            await fs.promises.writeFile(`tmp${sep}hello${suffix}`, response.data);
            console.log("Wrote File");
            if (os.type() !== 'Windows_NT') { fs.chmodSync(`tmp${sep}hello${suffix}`, fs.constants.S_IXUSR) };
            console.log("Executable")
            await exec(`.${sep}tmp${sep}hello${suffix}`, {stdio: 'inherit'});





